{"ast":null,"code":"var _jsxFileName = \"/home/nathanrliu/inverse-transform-sampling/src/Components/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CanvasJSReact from './canvasjs.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst dictToList = dict => {\n  let res = [];\n\n  for (const key in dict) {\n    res.push({\n      \"label\": key,\n      \"x\": key * 10,\n      \"y\": dict[key]\n    });\n  }\n\n  console.log(res);\n  return res;\n};\n\nconst Graph = () => {\n  _s();\n\n  const [data, setData] = useState({});\n  const [options, setOptions] = useState({});\n\n  function functionIntegral(x) {\n    return 1 / 2 * x ** 2;\n  }\n\n  const endBound = 1.414;\n\n  function binarySearch(func, val, start, end) {\n    let left = start;\n    let right = end;\n\n    while (left < right) {\n      let center = left + (right - left) / 2;\n      let valAtVal = functionIntegral(val);\n\n      if (Math.abs(center - valAtVal) < .001) {\n        return center;\n      } else if (center < valAtVal) {\n        left = center;\n      } else if (center > valAtVal) {\n        right = center;\n      }\n    }\n  }\n\n  let results = data;\n\n  function generate() {\n    for (let i = 0; i < 1000; i++) {\n      let val = Math.random() * 2;\n      let generatedNum = binarySearch(functionIntegral, val, 0, endBound);\n      let roundedNum = generatedNum.toFixed(1);\n\n      if (!(roundedNum in results)) {\n        results[roundedNum] = 0;\n      }\n\n      results[roundedNum] += 1;\n    }\n  }\n\n  const delayRun = delay => {\n    setTimeout(() => {\n      setData(results);\n      setOptions({\n        animationEnabled: true,\n        exportEnabled: true,\n        theme: \"light2\",\n        //\"light1\", \"dark1\", \"dark2\"\n        title: {\n          text: \"Simple Column Chart with Index Labels\"\n        },\n        axisY: {\n          includeZero: false\n        },\n        data: [{\n          type: \"column\",\n          //change type to bar, line, area, pie, etc\n          //indexLabel: \"{y}\", //Shows y value on all Data Points\n          indexLabelFontColor: \"#5A5757\",\n          indexLabelPlacement: \"outside\",\n          dataPoints: dictToList(data)\n        }]\n      });\n    }, delay);\n  };\n\n  useEffect(() => {\n    generate();\n    delayRun(5000);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 2\n  }, this);\n};\n\n_s(Graph, \"T9XXUtySo0KLp0xukml4vdFSv9Q=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","CanvasJSReact","CanvasJS","CanvasJSChart","dictToList","dict","res","key","push","console","log","Graph","data","setData","options","setOptions","functionIntegral","x","endBound","binarySearch","func","val","start","end","left","right","center","valAtVal","Math","abs","results","generate","i","random","generatedNum","roundedNum","toFixed","delayRun","delay","setTimeout","animationEnabled","exportEnabled","theme","title","text","axisY","includeZero","type","indexLabelFontColor","indexLabelPlacement","dataPoints"],"sources":["/home/nathanrliu/inverse-transform-sampling/src/Components/Graph.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport CanvasJSReact from './canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst dictToList = (dict) => {\n\tlet res = [];\n\tfor (const key in dict){\n\t\tres.push({\"label\":key,\n\t\t\t\"x\":key * 10,\n\t\t\t\"y\":dict[key]\n\t\t});\n\t}\n\tconsole.log(res);\n\treturn res;\n}\nconst Graph = ()=>{\n\tconst [data, setData] = useState({});\n\tconst [options, setOptions] = useState({});\n\tfunction functionIntegral(x){\n\t\treturn 1/2 * x**2;\n\t}\n\tconst endBound = 1.414;\n\tfunction binarySearch(func, val, start, end){\n\t\tlet left = start;\n\t\tlet right = end;\n\t\twhile (left < right){\n\t\t\tlet center = left + (right - left)/2;\n\t\t\tlet valAtVal = functionIntegral(val);\n\t\t\tif (Math.abs(center - valAtVal) < .001){\n\t\t\t\treturn center;\n\t\t\t}else if (center < valAtVal){\n\t\t\t\tleft = center;\n\t\t\t}else if (center > valAtVal){\n\t\t\t\tright = center;\n\t\t\t}\n\t\t}\n\t}\n\tlet results = data;\n\tfunction generate(){\n\t\tfor (let i = 0; i < 1000; i++){\n\t\t\tlet val = Math.random()*2;\n\t\t\tlet generatedNum = binarySearch(functionIntegral, val, 0, endBound);\n\t\t\tlet roundedNum = generatedNum.toFixed(1);\n\t\t\tif (!(roundedNum in results)){\n\t\t\t\tresults[roundedNum] = 0;\n\t\t\t}\n\t\t\tresults[roundedNum] += 1;\n\t\t}\n\t}\n\t\n\tconst delayRun = (delay)=>{\n\t\tsetTimeout(()=>{\n\t\t\tsetData(results)\n\t\t\tsetOptions({\n\t\t\t\tanimationEnabled: true,\n\t\t\t\texportEnabled: true,\n\t\t\t\ttheme: \"light2\", //\"light1\", \"dark1\", \"dark2\"\n\t\t\t\ttitle:{\n\t\t\t\t\ttext: \"Simple Column Chart with Index Labels\"\n\t\t\t\t},\n\t\t\t\taxisY: {\n\t\t\t\t\tincludeZero: false\n\t\t\t\t},\n\t\t\t\tdata: [{\n\t\t\t\t\ttype: \"column\", //change type to bar, line, area, pie, etc\n\t\t\t\t\t//indexLabel: \"{y}\", //Shows y value on all Data Points\n\t\t\t\t\tindexLabelFontColor: \"#5A5757\",\n\t\t\t\t\tindexLabelPlacement: \"outside\",\n\t\t\t\t\tdataPoints:dictToList(data)\n\t\t\t\t}]\n\t\t\t});\n\t\t}, delay);\n\n\t}\n\tuseEffect(()=>{\n\t\tgenerate();\n\t\tdelayRun(5000);\n\t});\n\t\n\treturn (\n\t<div>\n\t\t<CanvasJSChart options = {options} />\n\t</div>\n\t);\n}\nexport default Graph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}