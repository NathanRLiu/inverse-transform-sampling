{"ast":null,"code":"var _jsxFileName = \"/home/nathanrliu/inverse-transform-sampling/src/Components/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Runner from './Runner';\nimport CanvasJSReact from './canvasjs.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Component = React.Component;\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart; //f(y) = x\n//integral(f(y)) = 1/2 * x^2\n\nfunction functionIntegral(x) {\n  return 1 / 2 * x ** 2;\n}\n\nconst endBound = 1.414;\n\nfunction binarySearch(func, val, start, end) {\n  let left = start;\n  let right = end;\n\n  while (left < right) {\n    let center = left + (right - left) / 2;\n\n    if (center < val) {\n      left = center;\n    } else if (center > val) {\n      right = center;\n    } else {\n      return center;\n    }\n  }\n}\n\nvar results = {};\n\nconst dictToList = dict => {\n  let res = [];\n\n  for (const key in dict) {\n    res.push({\n      \"x\": key,\n      \"y\": dict[key]\n    });\n  }\n\n  return res;\n};\n\nconst Graph = () => {\n  _s();\n\n  const [data, setData] = useState({});\n  const options = {\n    animationEnabled: true,\n    exportEnabled: true,\n    theme: \"light2\",\n    //\"light1\", \"dark1\", \"dark2\"\n    title: {\n      text: \"Simple Column Chart with Index Labels\"\n    },\n    axisY: {\n      includeZero: true\n    },\n    data: [{\n      type: \"column\",\n      //change type to bar, line, area, pie, etc\n      //indexLabel: \"{y}\", //Shows y value on all Data Points\n      indexLabelFontColor: \"#5A5757\",\n      indexLabelPlacement: \"outside\",\n      dataPoints: dictToList(data)\n    }]\n  };\n  const generatedNum = binarySearch(functionIntegral, Math.random(), 0, endBound);\n  let tempResults = { ...data\n  };\n  let roundedNum = generatedNum.toFixed(1);\n\n  for (let i = 0; i < 500; i++) {\n    if (!(roundedNum in results)) {\n      tempResults[roundedNum] = 0;\n    }\n\n    tempResults[roundedNum] += 1;\n  }\n\n  setData(tempResults);\n\n  const delayRun = delay => {\n    setTimeout(Runner(data, setData), delay);\n  };\n\n  delayRun(5000);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 2\n  }, this);\n};\n\n_s(Graph, \"0PQhZyvNHTQmyp/cNfIsZk8MtX8=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","Runner","CanvasJSReact","Component","CanvasJS","CanvasJSChart","functionIntegral","x","endBound","binarySearch","func","val","start","end","left","right","center","results","dictToList","dict","res","key","push","Graph","data","setData","options","animationEnabled","exportEnabled","theme","title","text","axisY","includeZero","type","indexLabelFontColor","indexLabelPlacement","dataPoints","generatedNum","Math","random","tempResults","roundedNum","toFixed","i","delayRun","delay","setTimeout","console","log"],"sources":["/home/nathanrliu/inverse-transform-sampling/src/Components/Graph.js"],"sourcesContent":["import React, {useState} from 'react';\nimport Runner from './Runner';\nimport CanvasJSReact from './canvasjs.react';\nvar Component = React.Component;\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n//f(y) = x\n//integral(f(y)) = 1/2 * x^2\nfunction functionIntegral(x){\n\treturn 1/2 * x**2;\n}\nconst endBound = 1.414;\nfunction binarySearch(func, val, start, end){\n\tlet left = start;\n\tlet right = end;\n\twhile (left < right){\n\t\tlet center = left + (right - left)/2;\n\t\tif (center < val){\n\t\t\tleft = center;\n\t\t}else if (center > val){\n\t\t\tright = center;\n\t\t}else{\n\t\t\treturn center;\n\t\t}\n\t}\n}\n\nvar results = {};\n\nconst dictToList = (dict) => {\n\tlet res = [];\n\tfor (const key in dict){\n\t\tres.push({\"x\":key,\n\t\t\t\"y\":dict[key]\n\t\t});\n\t}\n\treturn res;\n}\n\nconst Graph = ()=>{\n\tconst [data, setData] = useState({});\n\tconst options = {\n\t\tanimationEnabled: true,\n\t\texportEnabled: true,\n\t\ttheme: \"light2\", //\"light1\", \"dark1\", \"dark2\"\n\t\ttitle:{\n\t\t\ttext: \"Simple Column Chart with Index Labels\"\n\t\t},\n\t\taxisY: {\n\t\t\tincludeZero: true\n\t\t},\n\t\tdata: [{\n\t\t\ttype: \"column\", //change type to bar, line, area, pie, etc\n\t\t\t//indexLabel: \"{y}\", //Shows y value on all Data Points\n\t\t\tindexLabelFontColor: \"#5A5757\",\n\t\t\tindexLabelPlacement: \"outside\",\n\t\t\tdataPoints:dictToList(data)\n\t\t}]\n\t};\n\tconst generatedNum = binarySearch(functionIntegral, Math.random(), 0, endBound);\n\tlet tempResults = {...data};\n\tlet roundedNum = generatedNum.toFixed(1);\n\n\tfor (let i = 0; i < 500; i++){\n\t\t\tif (!(roundedNum in results)){\n\t\t\ttempResults[roundedNum] = 0;\n\t\t}\n\t\ttempResults[roundedNum] += 1;\n\t}\n\tsetData(tempResults);\n\tconst delayRun = (delay)=>{\n\t\tsetTimeout(Runner(data, setData), delay);\n\t}\n\tdelayRun(5000);\n\tconsole.log(data);\n\treturn (\n\t<div>\n\t\t<CanvasJSChart options = {options} \n\t\t\t/* onRef={ref => this.chart = ref} */\n\t\t/>\n\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n\t</div>\n\t);\n}\nexport default Graph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}